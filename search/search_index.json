{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"BaoLabs Homelab","text":"<p>Welcome to my homelab documentation! This site documents my self-hosted infrastructure, services, and configurations.</p> <ul> <li>\ud83d\udce6 Repository: github.com/mrbunbao/homelab</li> <li>\u270f\ufe0f Edit pages: Use the \"Edit on GitHub\" button in the top-right corner</li> </ul>"},{"location":"#quick-navigation","title":"Quick Navigation","text":""},{"location":"#services","title":"\ud83d\ude80 Services","text":"<p>Self-hosted applications and containers:</p> <ul> <li>Nextcloud - File sync and collaboration</li> <li>Jellyfin - Media streaming with hardware transcoding</li> <li>Home Assistant - Home automation</li> <li>Syncthing - File synchronization</li> <li>Tabby - AI coding assistant</li> <li>Epic Games - Free games auto-claimer</li> </ul>"},{"location":"#security","title":"\ud83d\udd12 Security","text":"<ul> <li>Fail2ban - Brute-force protection</li> <li>Cloudflare WAF</li> <li>Let's Encrypt SSL/TLS</li> </ul>"},{"location":"#networking","title":"\ud83c\udf10 Networking","text":"<ul> <li>UniFi network management</li> <li>AdGuard Home DNS</li> <li>Cloudflare DDNS</li> <li>Reverse proxy configuration</li> </ul>"},{"location":"#hardware","title":"\ud83d\udcbb Hardware","text":"<ul> <li>Server specifications</li> <li>Intel Alder Lake compute</li> <li>Z-Wave/Zigbee adapters</li> <li>Network equipment</li> </ul>"},{"location":"#monitoring","title":"\ud83d\udcca Monitoring","text":"<p>Under construction - Metrics, dashboards, and alerting</p>"},{"location":"#backups","title":"\ud83d\udcbe Backups","text":"<p>Under construction - Backup strategies and disaster recovery</p>"},{"location":"#about","title":"About","text":"<p>This homelab serves as a learning environment and self-hosted infrastructure for personal services, automation, and media.</p> <p>Built with MkDocs Material and deployed via GitHub Pages.</p>"},{"location":"backups/","title":"Backups","text":"<p>Backup strategies and disaster recovery procedures.</p>"},{"location":"backups/#backup-strategy","title":"Backup Strategy","text":"<p>Coming soon: 3-2-1 backup strategy documentation</p>"},{"location":"backups/#tools","title":"Tools","text":"<ul> <li>Restic - Encrypted, deduplicated backups</li> <li>Borg - Alternative backup solution</li> <li>Syncthing - File synchronization across devices</li> </ul>"},{"location":"backups/#backup-targets","title":"Backup Targets","text":"<ul> <li>Local NAS storage</li> <li>Off-site cloud storage</li> <li>External USB drives</li> </ul>"},{"location":"backups/#recovery-procedures","title":"Recovery Procedures","text":"<p>Coming soon: disaster recovery runbooks</p>"},{"location":"backups/#backup-schedule","title":"Backup Schedule","text":"<p>Coming soon: automated backup schedules</p>"},{"location":"hardware/","title":"Hardware","text":"<p>Physical hardware and infrastructure specifications.</p>"},{"location":"hardware/#servers","title":"Servers","text":""},{"location":"hardware/#ugreen-nas","title":"UGREEN NAS","text":"<p>Coming soon: specifications and configuration</p>"},{"location":"hardware/#compute-resources","title":"Compute Resources","text":"<ul> <li>CPU: Intel Alder Lake-UP3</li> <li>iGPU: Intel UHD Graphics [8086:46b3] - used for hardware transcoding</li> <li>RAM: TBD</li> <li>Storage: TBD</li> </ul>"},{"location":"hardware/#peripherals","title":"Peripherals","text":""},{"location":"hardware/#z-wavezigbee","title":"Z-Wave/Zigbee","text":"<ul> <li>Nabu Casa ZWA-2 - Combined Z-Wave + Zigbee USB adapter for Home Assistant</li> </ul>"},{"location":"hardware/#network-hardware","title":"Network Hardware","text":"<ul> <li>UniFi Equipment: TBD</li> <li>Switches: TBD</li> <li>Access Points: TBD</li> </ul>"},{"location":"monitoring/","title":"Monitoring","text":"<p>System monitoring, metrics, and alerting.</p>"},{"location":"monitoring/#planned-components","title":"Planned Components","text":"<ul> <li>Prometheus - Metrics collection and storage</li> <li>Grafana - Visualization and dashboards</li> <li>Uptime Kuma - Service uptime monitoring</li> <li>Alerting - Notifications via Discord/Email</li> </ul>"},{"location":"monitoring/#metrics-to-track","title":"Metrics to Track","text":"<ul> <li>CPU, memory, disk usage</li> <li>Network traffic</li> <li>Container resource consumption</li> <li>Service uptime and response times</li> <li>Temperature sensors</li> </ul> <p>This section is under construction.</p>"},{"location":"networking/","title":"Networking","text":"<p>Network configuration and infrastructure for the homelab.</p>"},{"location":"networking/#components","title":"Components","text":"<ul> <li>UniFi Network - Network management and VLANs</li> <li>AdGuard Home - DNS-based ad blocking and local DNS</li> <li>Cloudflare - External DNS, DDNS, and DDoS protection</li> <li>Reverse Proxy - Traefik/Caddy for service routing</li> </ul>"},{"location":"networking/#network-topology","title":"Network Topology","text":"<p>Coming soon: network diagram</p>"},{"location":"networking/#subnets-vlans","title":"Subnets &amp; VLANs","text":"<p>Coming soon: VLAN configuration</p>"},{"location":"networking/#dns-configuration","title":"DNS Configuration","text":""},{"location":"networking/#adguard-home","title":"AdGuard Home","text":"<p>Local DNS server for: - Ad blocking - Custom DNS records for homelab services - DNS-over-HTTPS (DoH)</p>"},{"location":"networking/#cloudflare","title":"Cloudflare","text":"<p>External DNS records point to the public IP, protected by Cloudflare proxy.</p>"},{"location":"networking/#port-forwarding","title":"Port Forwarding","text":"<p>Coming soon: port forwarding rules</p>"},{"location":"networking/test/","title":"Homelab Overview","text":""},{"location":"networking/test/#what-is-a-homelab","title":"What is a Homelab?","text":"<p>A homelab is a personal environment where you can experiment with technology, servers, networking, and various IT services in a safe, controlled setting. It's essentially your own data center at home.</p>"},{"location":"networking/test/#common-homelab-uses","title":"Common Homelab Uses","text":""},{"location":"networking/test/#learning-and-experimentation","title":"Learning and Experimentation","text":"<ul> <li>Test new software and configurations</li> <li>Practice system administration skills</li> <li>Learn about networking and security</li> <li>Experiment with containers and virtualization</li> </ul>"},{"location":"networking/test/#self-hosting-services","title":"Self-Hosting Services","text":"<ul> <li>Media Server: Plex, Jellyfin, or Emby</li> <li>File Storage: Nextcloud or Synology</li> <li>Home Automation: Home Assistant</li> <li>Network Services: DNS, VPN, reverse proxy</li> </ul>"},{"location":"networking/test/#development-environment","title":"Development Environment","text":"<ul> <li>Test applications before production</li> <li>CI/CD pipelines</li> <li>Database testing</li> <li>Development sandboxes</li> </ul>"},{"location":"networking/test/#basic-components","title":"Basic Components","text":"<ol> <li>Hardware: Old PCs, Raspberry Pis, or dedicated servers</li> <li>Virtualization: Proxmox, VMware ESXi, or VirtualBox</li> <li>Networking: Switches, routers, VLANs</li> <li>Storage: NAS, external drives, RAID arrays</li> </ol>"},{"location":"networking/test/#benefits","title":"Benefits","text":"<ul> <li>Hands-on learning experience</li> <li>Privacy and data control</li> <li>Cost savings on cloud services</li> <li>Career skill development</li> </ul>"},{"location":"security/","title":"Security","text":"<p>Security configurations and intrusion prevention for the homelab.</p>"},{"location":"security/#components","title":"Components","text":"<ul> <li>Fail2ban - Brute-force protection and IP banning</li> <li>Cloudflare - DDoS protection and WAF</li> <li>Let's Encrypt - SSL/TLS certificates</li> </ul>"},{"location":"security/fail2ban/","title":"Fail2ban","text":"<p>Intrusion prevention system that protects services from brute-force attacks.</p>"},{"location":"security/fail2ban/#docker-compose-configuration","title":"Docker Compose Configuration","text":"<pre><code>services:\n  fail2ban:\n    image: lscr.io/linuxserver/fail2ban:latest\n    container_name: fail2ban\n    cap_add:\n      - NET_ADMIN\n      - NET_RAW\n    network_mode: host\n    environment:\n      - PUID=1000\n      - PGID=1000\n      - TZ=Etc/UTC\n      - VERBOSITY=-vv\n    volumes:\n      - /path/to/fail2ban/config:/config\n      - /var/log:/var/log:ro\n      - /var/www/logs/access.log:/remotelogs/nextcloud:ro\n    restart: unless-stopped\n</code></pre>"},{"location":"security/fail2ban/#nextcloud-integration","title":"Nextcloud Integration","text":""},{"location":"security/fail2ban/#log-path","title":"Log Path","text":"<p>Map the Nextcloud log directory as a read-only volume: <pre><code>- /var/www/logs/access.log:/remotelogs/nextcloud:ro\n</code></pre></p>"},{"location":"security/fail2ban/#jail-configuration","title":"Jail Configuration","text":"<p>Create <code>/config/fail2ban/jail.d/nextcloud.local</code>:</p> <pre><code>[nextcloud]\nenabled = true\nport = http,https\nprotocol = tcp\nfilter = nextcloud\nlogpath = /remotelogs/nextcloud\nmaxretry = 5\nbantime = 3600\nfindtime = 600\n</code></pre>"},{"location":"security/fail2ban/#filter","title":"Filter","text":"<p>Create <code>/config/fail2ban/filter.d/nextcloud.conf</code>:</p> <pre><code>[Definition]\nfailregex = ^{\"reqId\":\".*\",\"remoteAddr\":\"&lt;HOST&gt;\",\"app\":\"core\".*\"message\":\"Login failed:\n            ^{\"reqId\":\".*\",\"remoteAddr\":\"&lt;HOST&gt;\",\"app\":\"core\".*\"message\":\"Token login failed\nignoreregex =\n</code></pre>"},{"location":"security/fail2ban/#monitoring","title":"Monitoring","text":"<p>View banned IPs: <pre><code>docker exec -it fail2ban fail2ban-client status\ndocker exec -it fail2ban fail2ban-client status nextcloud\n</code></pre></p> <p>Unban an IP: <pre><code>docker exec -it fail2ban fail2ban-client set nextcloud unbanip &lt;IP&gt;\n</code></pre></p>"},{"location":"services/","title":"Services","text":"<p>This section documents all self-hosted services running in the homelab.</p>"},{"location":"services/#active-services","title":"Active Services","text":"<ul> <li>Nextcloud - File sync and collaboration platform</li> <li>Jellyfin - Media server for streaming movies and TV shows</li> <li>Home Assistant - Home automation platform</li> <li>Syncthing - Continuous file synchronization</li> <li>Tabby - Self-hosted AI coding assistant</li> <li>Epic Games - Automated free games claimer</li> </ul>"},{"location":"services/#infrastructure-services","title":"Infrastructure Services","text":"<ul> <li>Fail2ban - Intrusion prevention system</li> </ul>"},{"location":"services/epicgames/","title":"Epic Games Free Games Auto-Claimer","text":"<p>Automated Epic Games Store free-game claimer running in Docker.</p>"},{"location":"services/epicgames/#overview","title":"Overview","text":"<p>This container periodically checks for new free games and redeems them automatically under your Epic account.</p> <p>Image: <code>ghcr.io/claabs/epicgames-freegames-node:latest</code></p>"},{"location":"services/epicgames/#container-configuration","title":"Container Configuration","text":"<p>Container name: <code>epicgames-freegames</code> Host Port: <code>5081 \u2192 3000</code> Config Path: <code>/volume1/docker/epicgames-freegames/config/config.json</code> Schedule: Runs every 6 hours (<code>0 0,6,12,18 * * *</code>) Time Zone: <code>America/Denver</code></p>"},{"location":"services/epicgames/#docker-compose","title":"Docker Compose","text":"<pre><code>services:\n  epicgames:\n    image: ghcr.io/claabs/epicgames-freegames-node:latest\n    container_name: epicgames-freegames\n    volumes:\n      - /path/to/config:/usr/app/config\n    ports:\n      - 5081:3000\n    environment:\n      - TZ=America/Denver\n    restart: unless-stopped\n</code></pre>"},{"location":"services/epicgames/#configuration-configjson","title":"Configuration (config.json)","text":"<pre><code>{\n  \"runOnStartup\": true,\n  \"cronSchedule\": \"0 0,6,12,18 * * *\",\n  \"logLevel\": \"info\",\n  \"testNotifiers\": false,\n  \"webPortalConfig\": {\n    \"baseUrl\": \"http://YOUR_IP:5081\"\n  },\n  \"accounts\": [\n    { \"email\": \"your@email.com\" }\n  ],\n  \"notifiers\": [\n    {\n      \"type\": \"email\",\n      \"smtpHost\": \"smtp.gmail.com\",\n      \"smtpPort\": 587,\n      \"secure\": false,\n      \"emailSenderAddress\": \"[REDACTED]\",\n      \"emailSenderName\": \"Epic Games Captchas\",\n      \"emailRecipientAddress\": \"[REDACTED]\",\n      \"auth\": {\n        \"user\": \"[REDACTED]\",\n        \"pass\": \"[REDACTED]\"\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"services/epicgames/#device-authorization","title":"Device Authorization","text":"<p>When the container requires authentication, it prints a link: <pre><code>http://YOUR_IP:5081/abcdef\n</code></pre></p> <p>Open that link immediately and complete Epic's device login.</p>"},{"location":"services/epicgames/#troubleshooting","title":"Troubleshooting","text":"<p>JSON syntax error with Windows line endings: <pre><code>dos2unix /path/to/config/config.json\n</code></pre></p> <p>Discord webhook errors: Verify webhook URL and permissions.</p>"},{"location":"services/epicgames/#update-procedure","title":"Update Procedure","text":"<pre><code>docker pull ghcr.io/claabs/epicgames-freegames-node:latest\ndocker stop epicgames-freegames\ndocker rm epicgames-freegames\ndocker compose up -d epicgames-freegames\n</code></pre>"},{"location":"services/home-assistant/","title":"Home Assistant","text":"<p>Open-source home automation platform for controlling smart devices.</p>"},{"location":"services/home-assistant/#z-wave-usb-adapter","title":"Z-Wave USB Adapter","text":""},{"location":"services/home-assistant/#nabu-casa-zwa-2-zigbee-z-wave","title":"Nabu Casa ZWA-2 (Zigbee + Z-Wave)","text":"<p>Device Path: <code>/dev/ttyACM0</code></p> <p>Device ID: <code>/dev/serial/by-id/usb-Nabu_Casa_ZWA-2_80B54EE5C54C-if00</code></p> <p>Attributes: <pre><code>Subsystem: tty\nDevice path: /dev/ttyACM0\nID: /dev/serial/by-id/usb-Nabu_Casa_ZWA-2_80B54EE5C54C-if00\nID_MODEL: ZWA-2\nID_SERIAL: Nabu_Casa_ZWA-2_80B54EE5C54C\nID_USB_DRIVER: cdc_acm\nID_VENDOR: Nabu_Casa\n</code></pre></p>"},{"location":"services/home-assistant/#docker-compose-configuration","title":"Docker Compose Configuration","text":"<pre><code>services:\n  homeassistant:\n    image: ghcr.io/home-assistant/home-assistant:stable\n    container_name: homeassistant\n    privileged: true\n    restart: unless-stopped\n    environment:\n      - TZ=America/Denver\n    volumes:\n      - /path/to/config:/config\n    devices:\n      - /dev/ttyACM0:/dev/ttyACM0\n    network_mode: host\n</code></pre> <p>Note: Pass through the Z-Wave USB device using the stable <code>/dev/serial/by-id/</code> path to avoid issues if device enumeration changes.</p>"},{"location":"services/jellyfin/","title":"Jellyfin","text":"<p>Media server for streaming movies, TV shows, and music.</p>"},{"location":"services/jellyfin/#hardware-transcoding","title":"Hardware Transcoding","text":""},{"location":"services/jellyfin/#gpu-information","title":"GPU Information","text":"<pre><code>lspci -nn | grep -Ei \"3d|display|vga\"\n</code></pre> <p>Output: <pre><code>00:02.0 VGA compatible controller [0300]: Intel Corporation\nAlder Lake-UP3 GT1 [UHD Graphics] [8086:46b3] (rev 0c)\n</code></pre></p>"},{"location":"services/jellyfin/#intel-quicksync-configuration","title":"Intel QuickSync Configuration","text":"<p>For hardware-accelerated transcoding on Intel Alder Lake integrated graphics:</p> <ol> <li>Pass through <code>/dev/dri</code> to the container</li> <li>Ensure the container user has access to the <code>render</code> and <code>video</code> groups</li> <li>Enable Intel QuickSync in Jellyfin admin dashboard</li> </ol>"},{"location":"services/jellyfin/#docker-compose-example","title":"Docker Compose Example","text":"<pre><code>services:\n  jellyfin:\n    image: jellyfin/jellyfin:latest\n    container_name: jellyfin\n    user: 1000:1000\n    network_mode: host\n    volumes:\n      - /path/to/config:/config\n      - /path/to/cache:/cache\n      - /path/to/media:/media\n    devices:\n      - /dev/dri/renderD128:/dev/dri/renderD128\n      - /dev/dri/card0:/dev/dri/card0\n    restart: unless-stopped\n</code></pre>"},{"location":"services/nextcloud/","title":"Nextcloud","text":"<p>File sync and collaboration platform with All-in-One deployment.</p>"},{"location":"services/nextcloud/#docker-compose-configuration","title":"Docker Compose Configuration","text":"<pre><code>services:\n  nextcloud:\n    image: nextcloud/all-in-one:latest\n    restart: always\n    container_name: nextcloud-aio-mastercontainer\n    volumes:\n      - nextcloud_aio_mastercontainer:/mnt/docker-aio-config\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    ports:\n      - 80:80\n      - 8080:8080\n    environment:\n      - APACHE_PORT=11000\n      - APACHE_IP_BINDING=0.0.0.0\n      - SKIP_DOMAIN_VALIDATION=true\n      - NEXTCLOUD_DATADIR=/mnt/ncdata\n\nvolumes:\n  nextcloud_aio_mastercontainer:\n    name: nextcloud_aio_mastercontainer\n</code></pre>"},{"location":"services/nextcloud/#webdav-access","title":"WebDAV Access","text":"<pre><code>https://cloud.baolabs.io/remote.php/dav/files/admad/\n</code></pre>"},{"location":"services/nextcloud/#windows-drive-mapping","title":"Windows Drive Mapping","text":"<pre><code>net use Z: https://cloud.baolabs.io/remote.php/dav/files/admad/ /user:admad\n</code></pre>"},{"location":"services/nextcloud/#cloudflare-dns-integration","title":"Cloudflare DNS Integration","text":"<p>For Let's Encrypt SSL with Cloudflare DNS validation:</p> <ul> <li>API token: [REDACTED]</li> <li>Used for automatic certificate renewal</li> </ul>"},{"location":"services/nextcloud/#security","title":"Security","text":"<p>Protected with Fail2ban for brute-force protection.</p>"},{"location":"services/syncthing/","title":"Syncthing","text":"<p>Continuous file synchronization across devices.</p>"},{"location":"services/syncthing/#overview","title":"Overview","text":"<p>Syncthing is a decentralized, peer-to-peer file sync solution that keeps files synchronized across multiple devices without requiring a central server.</p>"},{"location":"services/syncthing/#docker-compose-configuration","title":"Docker Compose Configuration","text":"<pre><code>services:\n  syncthing:\n    image: syncthing/syncthing:latest\n    container_name: syncthing\n    hostname: homelab-sync\n    environment:\n      - PUID=1000\n      - PGID=1000\n      - TZ=America/Denver\n    volumes:\n      - /path/to/config:/var/syncthing\n      - /path/to/data:/data\n    ports:\n      - 8384:8384   # Web UI\n      - 22000:22000/tcp  # Sync protocol\n      - 22000:22000/udp\n      - 21027:21027/udp  # Local discovery\n    restart: unless-stopped\n</code></pre>"},{"location":"services/syncthing/#access","title":"Access","text":"<ul> <li>Web UI: <code>http://localhost:8384</code></li> <li>Default sync folder: <code>/data</code></li> </ul>"},{"location":"services/syncthing/#configuration","title":"Configuration","text":"<ol> <li>Open the web UI</li> <li>Add remote devices by exchanging device IDs</li> <li>Configure folders to share</li> <li>Set ignore patterns as needed</li> </ol>"},{"location":"services/tabby/","title":"Tabby","text":"<p>Self-hosted AI coding assistant for code completion and chat.</p>"},{"location":"services/tabby/#overview","title":"Overview","text":"<p>Tabby provides GitHub Copilot-like code completions using open-source models running on your own hardware.</p>"},{"location":"services/tabby/#github-oauth-configuration","title":"GitHub OAuth Configuration","text":"<p>For VSCode extension authentication:</p> <ul> <li>Client ID: [REDACTED]</li> <li>Client Secret: [REDACTED]</li> <li>Gateway Auth Token: [REDACTED]</li> </ul>"},{"location":"services/tabby/#access","title":"Access","text":"<ul> <li>Web UI: <code>http://TABBY_IP:PORT</code></li> <li>API endpoint for VSCode extension</li> </ul>"},{"location":"services/tabby/#docker-compose-configuration","title":"Docker Compose Configuration","text":"<pre><code>services:\n  tabby:\n    image: tabbyml/tabby:latest\n    container_name: tabby\n    volumes:\n      - /path/to/tabby/data:/data\n    ports:\n      - 8080:8080\n    environment:\n      - TABBY_MODEL=StarCoder-1B\n    restart: unless-stopped\n    deploy:\n      resources:\n        reservations:\n          devices:\n            - driver: nvidia\n              count: 1\n              capabilities: [gpu]\n</code></pre>"},{"location":"services/tabby/#vscode-extension-setup","title":"VSCode Extension Setup","text":"<ol> <li>Install the Tabby extension from the marketplace</li> <li>Configure endpoint URL</li> <li>Authenticate with GitHub OAuth</li> </ol>"}]}